# Cloud extinction
enum CloudExtinction {
  # CloudExtinction PointOne
  POINT_ONE

  # CloudExtinction PointThree
  POINT_THREE

  # CloudExtinction PointFive
  POINT_FIVE

  # CloudExtinction OnePointZero
  ONE_POINT_ZERO

  # CloudExtinction OnePointFive
  ONE_POINT_FIVE

  # CloudExtinction TwoPointZero
  TWO_POINT_ZERO

  # CloudExtinction ThreePointZero
  THREE_POINT_ZERO
}

# Image quality
enum ImageQuality {
  # ImageQuality PointOne
  POINT_ONE

  # ImageQuality PointTwo
  POINT_TWO

  # ImageQuality PointThree
  POINT_THREE

  # ImageQuality PointFour
  POINT_FOUR

  # ImageQuality PointSix
  POINT_SIX

  # ImageQuality PointEight
  POINT_EIGHT

  # ImageQuality OnePointZero
  ONE_POINT_ZERO

  # ImageQuality OnePointFive
  ONE_POINT_FIVE

  # ImageQuality TwoPointZero
  TWO_POINT_ZERO
}

# Sky background
enum SkyBackground {
  # SkyBackground Darkest
  DARKEST

  # SkyBackground Dark
  DARK

  # SkyBackground Gray
  GRAY

  # SkyBackground Bright
  BRIGHT
}

# Water vapor
enum WaterVapor {
  # WaterVapor VeryDry
  VERY_DRY

  # WaterVapor Dry
  DRY

  # WaterVapor Median
  MEDIAN

  # WaterVapor Wet
  WET
}

type AirMassRange {
  # Minimum AirMass (unitless)
  min: PosBigDecimal!

  # Maximum AirMass (unitless)
  max: PosBigDecimal!
}

# Air mass range creation and edit parameters
input AirMassRangeInput {
  min: PosBigDecimal
  max: PosBigDecimal
}

type HourAngleRange {
  # Minimum Hour Angle (hours)
  minHours: BigDecimal!

  # Maximum Hour Angle (hours)
  maxHours: BigDecimal!
}

# Hour angle range creation and edit parameters
input HourAngleRangeInput {
  minHours: BigDecimal
  maxHours: BigDecimal
}

# Either air mass range or elevation range
type ElevationRange {
  # AirMass range if elevation range is an Airmass range
  airMass: AirMassRange

  # Hour angle range if elevation range is an Hour angle range
  hourAngle: HourAngleRange
}

# Elevation range creation and edit parameters.  Choose one of airMass or hourAngle constraints.
input ElevationRangeInput {
  airMass: AirMassRangeInput
  hourAngle: HourAngleRangeInput
}

type ConstraintSet {
  # Image quality
  imageQuality: ImageQuality!

  # Cloud extinction
  cloudExtinction: CloudExtinction!

  # Sky background
  skyBackground: SkyBackground!

  # Water vapor
  waterVapor: WaterVapor!

  # Either air mass range or elevation range
  elevationRange: ElevationRange!
}

# Constraint set creation and editing parameters
input ConstraintSetInput {
  # The imageQuality field is required when creating a new instance of ConstraintSet, but optional when editing
  imageQuality: ImageQuality

  # The cloudExtinction field is required when creating a new instance of ConstraintSet, but optional when editing
  cloudExtinction: CloudExtinction

  # The skyBackground field is required when creating a new instance of ConstraintSet, but optional when editing
  skyBackground: SkyBackground

  # The waterVapor field is required when creating a new instance of ConstraintSet, but optional when editing
  waterVapor: WaterVapor

  # The elevationRange field is required when creating a new instance of ConstraintSet, but optional when editing
  elevationRange: ElevationRangeInput
}

